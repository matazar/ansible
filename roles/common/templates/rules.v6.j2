# Generated by ip6tables-save v1.6.0 on Sat Nov 23 15:56:25 2019
*filter
:INPUT DROP [149:14820]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [1298:143801]
# Allow established connections
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
# Loopback
-A INPUT -i lo -j ACCEPT
# Ping
-A INPUT -p ipv6-icmp -j ACCEPT
# SSH
{% for host in trusted_hosts | ipv6 %}
-A INPUT -s {{ host| ipaddr('address') }}/{{ host | ipaddr('prefix') }} -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
{% endfor %}
{% if sshd_public_port %}
# SSH
-A INPUT -d {{ ipv6_address | ipaddr('address') }}/{{ ipv6_address | ipaddr('prefix') }} -p tcp -m state --state NEW -m tcp --dport {{ sshd_public_port }} -j ACCEPT
{% endif %}
-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j DROP
-A INPUT -p tcp -m state --state NEW -m tcp --dport 115 -j DROP
{% if 'local_dns' in group_names %}
{% if bind_ipv6 %}
# DNS
{% if bind_ipv6 == 'any' %}
-A INPUT -p tcp -m state --state NEW -m tcp --dport 53 -j ACCEPT
-A INPUT -p udp -m state --state NEW -m udp --dport 53 -j ACCEPT
{% else %}
-A INPUT -d {{ bind_ipv6 | ipaddr('address') }}/{{ bind_ipv6 | ipaddr('prefix') }} -p tcp -m state --state NEW -m tcp --dport 53 -j ACCEPT
-A INPUT -d {{ bind_ipv6 | ipaddr('address') }}/{{ bind_ipv6 | ipaddr('prefix') }} -p udp -m state --state NEW -m udp --dport 53 -j ACCEPT
{% endif %}
{% endif %}
{% endif %}
{% if firewall_open_ports %}
{% for port in firewall_open_ports %}
{% if firewall_open_ports[port]['tcp'] | default(false) %}
-A INPUT -p tcp -m state --state NEW -m tcp --dport {{ port }} -j ACCEPT
{% endif %}
{% if firewall_open_ports[port]['udp'] | default(false) %}
-A INPUT -p udp -m state --state NEW -m udp --dport {{ port }} -j ACCEPT
{% endif %}
{% endfor %}
{% endif %}
{% if 'samba' in group_names %}
{% if samba_ipv6 %}
-A INPUT -s {{ local_ipv6 | ipaddr('subnet') }} -p tcp -m tcp --dport 139 -j ACCEPT
-A INPUT -s {{ local_ipv6 | ipaddr('subnet') }} -p tcp -m tcp --dport 445 -j ACCEPT
{% for client in samba_allow_list | ipv6 %}
-A INPUT -s {{ client | ipaddr('subnet') }} -p tcp -m tcp --dport 139 -j ACCEPT
-A INPUT -s {{ client | ipaddr('subnet') }} -p tcp -m tcp --dport 445 -j ACCEPT
{% endfor %}
{% endif %}

{% endif %}
{% if 'dns' in group_names %}
{% if bind_ipv6 %}
# DNS
{% if bind_ipv6 == 'any' %}
-A INPUT -p tcp -m state --state NEW -m tcp --dport 53 -j ACCEPT
-A INPUT -p udp -m state --state NEW -m udp --dport 53 -j ACCEPT
{% else %}
-A INPUT -d {{ bind_ipv6 | ipaddr('address') }}/{{ bind_ipv6 | ipaddr('prefix') }} -p tcp -m state --state NEW -m tcp --dport 53 -j ACCEPT
-A INPUT -d {{ bind_ipv6 | ipaddr('address') }}/{{ bind_ipv6 | ipaddr('prefix') }} -p udp -m state --state NEW -m udp --dport 53 -j ACCEPT
{% endif %}
{% endif %}
{% endif %}
{% if 'mail' in group_names %}
# Mail Outgoing
-A INPUT -d {{ mail_ipv6 | ipaddr('address') }}/{{ mail_ipv6 | ipaddr('prefix') }} -p tcp -m state --state NEW -m tcp --dport 25 -j ACCEPT
-A INPUT -d {{ mail_ipv6 | ipaddr('address') }}/{{ mail_ipv6 | ipaddr('prefix') }} -p tcp -m state --state NEW -m tcp --dport 465 -j ACCEPT
-A INPUT -d {{ mail_ipv6 | ipaddr('address') }}/{{ mail_ipv6 | ipaddr('prefix') }} -p tcp -m state --state NEW -m tcp --dport 587 -j ACCEPT
# Mail Incoming
-A INPUT -d {{ mail_ipv6 | ipaddr('address') }}/{{ mail_ipv6 | ipaddr('prefix') }} -p tcp -m state --state NEW -m tcp --dport 143 -j ACCEPT
-A INPUT -d {{ mail_ipv6 | ipaddr('address') }}/{{ mail_ipv6 | ipaddr('prefix') }} -p tcp -m state --state NEW -m tcp --dport 993 -j ACCEPT
# Sieve
-A INPUT -d {{ mail_ipv6 | ipaddr('address') }}/{{ mail_ipv6 | ipaddr('prefix') }} -p tcp -m state --state NEW -m tcp --dport {{ sieve_port }} -j ACCEPT
# Don't let anything connect to Amavisd
-A INPUT -p tcp -m multiport --dports 10024,10025,10026 -j DROP
{% if doveadm_password %}
# Mail Replication
{% for host in doveadm_allow_list %}
{% if host in hostvars %}
{% if 'ipv6_address' in hostvars[host] | default(False) %}
-A INPUT -s {{ hostvars[host]['ipv6_address'] | regex_search('(\w{1,4}\:\w{1,4}:\w{1,4}:\w{1,4}:)') }}:/64 -p tcp -m multiport --dport {{ doveadm_port }} -j ACCEPT
{% endif %}
{% elif host | ipv6 %}{# Host may use a different IP to contact us, so we are allowing the entire IPv6 subnet. Might make sense to force a route on the host instead. #}
-A INPUT -s {{ host | ipaddr('address') | regex_search('(\w{1,4}\:\w{1,4}:\w{1,4}:\w{1,4}:)') }}:/64 -p tcp -m multiport --dport {{ doveadm_port }} -j ACCEPT
{% endif %}
{% endfor %}
{% endif %}
{% endif %}
{% if 'ldap' in group_names %}
# LDAP
{% for host in ldap_allow_list %}
{% if host | ipv6 %}
-A INPUT -s {{ host | ipaddr('address') }}/{{ host | ipaddr('prefix') }} -p tcp -m multiport --dport 389,636 -j ACCEPT
{% elif host in hostvars | default([]) %}
{% if hostvars[host]['ipv6_address'] | default(False) %}
-A INPUT -s {{ hostvars[host]['ipv6_address'] | ipaddr('address') }}/{{ hostvars[host]['ipv6_address'] | ipaddr('prefix') }} -p tcp -m multiport --dport 389,636 -j ACCEPT
{% endif %}
{% endif %}
{% endfor %}
# Deny everyone else
-A INPUT -p tcp -m state --state NEW -m tcp --dport 389 -j DROP
-A INPUT -p tcp -m state --state NEW -m tcp --dport 636 -j DROP
{% endif %}
{% if 'emby' in group_names %}
# Emby Server
{% for host in emby_allow_list | ipv6 %}
-A INPUT -s {{ host | ipaddr('address') }}/{{ host | ipaddr('prefix') }} -p tcp -m state --state NEW -m tcp --dport 8920 -j ACCEPT
{% endfor %}
-A INPUT -p tcp -m state --state NEW -m tcp --dport 8920 -j DROP
{% endif %}
{% if 'vpn' in group_names %}
-A INPUT -p udp -m state --state NEW -m udp --dport {{ wg_port }} -j ACCEPT
{% if 'wg0' in ansible_interfaces %}
-A FORWARD -i wg0 -j ACCEPT
-A FORWARD -o wg0 -j ACCEPT
{% endif %}
{% endif %}
# Hostname
-A INPUT -d {{ ipv6_address | ipaddr('address') }}/{{ ipv6_address | ipaddr('prefix') }} -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT
-A INPUT -d {{ ipv6_address | ipaddr('address') }}/{{ ipv6_address | ipaddr('prefix') }} -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT
{% for address in website_ipv6 %}
# Websites
-A INPUT -d {{ address | ipaddr('address') }}/{{ address | ipaddr('prefix') }} -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT
-A INPUT -d {{ address | ipaddr('address') }}/{{ address | ipaddr('prefix') }} -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT
{% endfor %}
COMMIT

{% if 'vpn' in group_names %}
{% if wg_nat %}
*nat
:PREROUTING ACCEPT [135:12610]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [7:573]
:POSTROUTING ACCEPT [7:573]
-A POSTROUTING -s {{ wg_ipv6_subnet }} -o {{ default_if | default(ansible_facts.default_ipv4.alias) }} -j MASQUERADE
-A POSTROUTING -s fc23::/64 -o enp0s3 -j MASQUERADE
COMMIT

{% endif %}
{% endif %}