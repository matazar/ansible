# Generated by iptables-save v1.6.0 on Sat Nov 23 15:55:37 2019
*filter
:INPUT DROP [75399:5244509]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [34013:2660376]
# Allow established connections
-I INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
# Loopback
-A INPUT -i lo -j ACCEPT
-A INPUT -d 127.0.0.0/8 ! -i lo -j REJECT --reject-with icmp-port-unreachable
# Ping
-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT
# SSH
{% if 'local' in group_names %}
-A INPUT -s {{ local_subnet | ipaddr('subnet') }} -p tcp -m tcp --dport 22 -j ACCEPT
{% endif %}
{% for host in trusted_hosts | ipv4 %}
{% if host | ipaddr('subnet') %}
{% if host != local_subnet %}
-A INPUT -s {{ host | ipaddr('subnet') }} -p tcp -m tcp --dport 22 -j ACCEPT
{% endif %}
{% else %}
-A INPUT -s {{ host | ipaddr('address') }}/{{ host | ipaddr('prefix') }} -p tcp -m tcp --dport 22 -j ACCEPT
{% endif %}
{% endfor %}
{% if sshd_public_port %}
# Accept external SSH 
-A INPUT -d {{ ansible_host | ipaddr('address') }}/{{ ansible_host | ipaddr('prefix') }} -p tcp -m tcp --dport {{ sshd_public_port }} -j ACCEPT
{% endif %}
-A INPUT -p tcp -m tcp --dport 22 -j DROP
-A INPUT -p tcp -m tcp --dport 115 -j DROP

{% if 'local_dns' in group_names %}
# DNS Queries
{% if local_dns_clients != [] %}
{% for client in local_dns_clients | ipv4 %}
{% if client | ipaddr('subnet') %}
-A INPUT -s {{ client | ipaddr('subnet') }} -p tcp -m tcp --dport 53 -j ACCEPT
-A INPUT -s {{ client | ipaddr('subnet') }} -p udp -m udp --dport 53 -j ACCEPT
{% else %}
-A INPUT -s {{ client | ipaddr('address') }}/{{ client | ipaddr('prefix') }} -p tcp -m tcp --dport 53 -j ACCEPT
-A INPUT -s {{ client | ipaddr('address') }}/{{ client | ipaddr('prefix') }} -p udp -m udp --dport 53 -j ACCEPT
{% endif %}
{% endfor %}
{% else %}
-A INPUT -d {{ ansible_host | ipaddr('address') }}/{{ ansible_host | ipaddr('prefix') }} -p tcp -m tcp --dport 53 -j ACCEPT
-A INPUT -d {{ ansible_host | ipaddr('address') }}/{{ ansible_host | ipaddr('prefix') }} -p udp -m udp --dport 53 -j ACCEPT
{% endif %}
{% endif %}
{% if 'samba' in group_names %}
-A INPUT -d {{ local_subnet | ipaddr('subnet') }} -p tcp -m tcp --dport 139 -j ACCEPT
-A INPUT -d {{ local_subnet | ipaddr('subnet') }} -p tcp -m tcp --dport 445 -j ACCEPT
{% for client in samba_allow_list | ipv4 %}
-A INPUT -s {{ client | ipaddr('subnet') }} -p tcp -m tcp --dport 139 -j ACCEPT
-A INPUT -s {{ client | ipaddr('subnet') }} -p tcp -m tcp --dport 445 -j ACCEPT
{% endfor %}

{% endif %}
{% if firewall_open_ports %}
{% for port in firewall_open_ports%}
{% if firewall_open_ports[port]['tcp'] | default(false) %}
-A INPUT -d {{ ansible_host | ipaddr('address') }}/{{ ansible_host | ipaddr('prefix') }} -p tcp -m tcp --dport {{ port }} -j ACCEPT
{% endif %}
{% if firewall_open_ports[port]['udp'] | default(false) %}
-A INPUT -d {{ ansible_host | ipaddr('address') }}/{{ ansible_host | ipaddr('prefix') }} -p udp -m udp --dport {{ port }} -j ACCEPT
{% endif %}
{% endfor %}

{% endif %}
{% if 'dns' in group_names %}
# DNS Queries
-A INPUT -d {{ ansible_host | ipaddr('address') }}/{{ ansible_host | ipaddr('prefix') }} -p tcp -m tcp --dport 53 -j ACCEPT
-A INPUT -d {{ ansible_host | ipaddr('address') }}/{{ ansible_host | ipaddr('prefix') }} -p udp -m udp --dport 53 -j ACCEPT

{% endif %}
{% if 'mail'  in group_names %}
# Mail Outgoing
-A INPUT -d {{ ansible_host | ipaddr('address') }}/{{ ansible_host | ipaddr('prefix') }} -p tcp -m tcp --dport 25 -j ACCEPT
-A INPUT -d {{ ansible_host | ipaddr('address') }}/{{ ansible_host | ipaddr('prefix') }} -p tcp -m tcp --dport 465 -j ACCEPT
-A INPUT -d {{ ansible_host | ipaddr('address') }}/{{ ansible_host | ipaddr('prefix') }} -p tcp -m tcp --dport 587 -j ACCEPT
# Mail Incoming
-A INPUT -d {{ ansible_host | ipaddr('address') }}/{{ ansible_host | ipaddr('prefix') }} -p tcp -m tcp --dport 143 -j ACCEPT
-A INPUT -d {{ ansible_host | ipaddr('address') }}/{{ ansible_host | ipaddr('prefix') }} -p tcp -m tcp --dport 993 -j ACCEPT
# Managesieve
-A INPUT -d {{ ansible_host | ipaddr('address') }}/{{ ansible_host | ipaddr('prefix') }} -p tcp -m tcp --dport {{ sieve_port }} -j ACCEPT
#  Don't let anything connect to Amavisd
-A INPUT -p tcp -m multiport --dports 10024,10025,10026 -j DROP
{% if doveadm_password %}
# Mail Replication
{% for host in doveadm_allow_list %}
{% if host in hostvars %}
{% if 'ipv4_address' in hostvars[host] %}
-A INPUT -s {{ hostvars[host]['ipv4_address'] | ipaddr('address') }}/{{ hostvars[host]['ipv4_address'] | ipaddr('prefix') }} -p tcp -m multiport --dport {{ doveadm_port }} -j ACCEPT
{% endif %}
{% elif host | ipv4 %}
-A INPUT -s {{ host | ipaddr('address') }}/{{ host | ipaddr('prefix') }} -p tcp -m multiport --dport {{ doveadm_port }} -j ACCEPT
{% endif %}
{% endfor %}
# Drop everyone else
-A INPUT -p tcp -m multiport --dport {{ doveadm_port }} -j DROP
{% endif %}

{% endif %}
{% if 'ldap' in group_names %}
# LDAP
-A INPUT -s 127.0.0.1/32 -p tcp -m multiport --dport 389,636 -j ACCEPT
{% for host in ldap_allow_list %}
{% if host | ipv4 %}
-A INPUT -s {{ host | ipaddr('address') }}/{{ host | ipaddr('prefix') }} -p tcp -m multiport --dport 389,636 -j ACCEPT
{% elif host in hostvars | default([]) %}
-A INPUT -s {{ hostvars[host]['ansible_host'] }}/32 -p tcp -m multiport --dport 389,636 -j ACCEPT
{% endif %}
{% endfor %}
# Drop everyone else
-A INPUT -p tcp -m multiport --dport 389,636 -j DROP

{% endif %}
{% if 'emby_server' in group_names %}
# Emby Server
{% for host in emby_allow_list | ipv4 %}
{% if host | ansible.netcommon.ipaddr('net') %}
-A INPUT -s {{ host | ipaddr('net') }} -p tcp -m tcp --dport 8920 -j ACCEPT
{% else %}
-A INPUT -s {{ host | ipaddr('address') }}/{{ host | ipaddr('prefix') }} -p tcp -m tcp --dport 8920 -j ACCEPT
{% endif %}
{% endfor %}
-A INPUT -p tcp -m tcp --dport 8920 -j DROP

{% endif %}
{% if 'transmission' in group_names %}
{% if not transmission_https_only | default(false) %}
{% for host in transmission_allow_list | default([]) %}
{% if host | ipv4 and not host | ipaddr('127.0.0.1/8') %}
-A INPUT -s {{ host | ipaddr('address') }}/{{ host | ipaddr('prefix') }} -p udp -m udp --dport 9091 -j ACCEPT
-A INPUT -s {{ host | ipaddr('address') }}/{{ host | ipaddr('prefix') }} -p tcp -m tcp --dport 9091 -j ACCEPT
{% endif %}
{% endfor %}

{% endif %}
# Transmission transfer ports
-A INPUT -p tcp --match multiport --dports {{ transmission_low_port }}:{{ transmission_high_port }} -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
-A INPUT -p udp --match multiport --dports {{ transmission_low_port }}:{{ transmission_high_port }} -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
-A OUTPUT -p tcp --match multiport --sports {{ transmission_low_port }}:{{ transmission_high_port }} -m conntrack --ctstate ESTABLISHED -j ACCEPT
-A OUTPUT -p udp --match multiport --sports {{ transmission_low_port }}:{{ transmission_high_port }} -m conntrack --ctstate ESTABLISHED -j ACCEPT
# Block tunnel traffic on some ports, just in case...
-A INPUT -i tun0 -p tcp --destination-port 22 -j DROP
-A INPUT -i tun0 -p tcp --destination-port 9091 -j DROP
-A INPUT -i tun0 -p udp --destination-port 9091 -j DROP

{% endif %}
{% if 'vpn' in group_names %}
-A INPUT -p udp -m udp --dport {{ wg_port }} -j ACCEPT
{% if 'wg0' in ansible_interfaces %}
-A FORWARD -i wg0 -j ACCEPT
-A FORWARD -o wg0 -j ACCEPT
{% endif %}

{% endif %}
# Block MYSQL
-A INPUT -p tcp -m tcp --dport 3306 -j DROP
# HTTP/HTTPS
-A INPUT -p tcp -m tcp --dport 80 -j ACCEPT
-A INPUT -p tcp -m tcp --dport 443 -j ACCEPT
COMMIT

{% if 'vpn' in group_names %}
*nat
:PREROUTING ACCEPT [1445:190283]
:INPUT ACCEPT [4:472]
:OUTPUT ACCEPT [63:4925]
:POSTROUTING ACCEPT [63:4925]
-A POSTROUTING -s {{ wg_ipv4_subnet }} -o {{ default_if | default(ansible_facts.default_ipv4.alias) }} -j MASQUERADE
COMMIT

{% endif %}