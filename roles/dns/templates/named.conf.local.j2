//
// Do any local configuration here
//

// Consider adding the 1918 zones here, if they are not used in your
// organization
include "/etc/bind/zones.rfc1918";

{% for domain in dns_zones %}
zone "{{ domain }}" {{ '{' }}
{% if nameservers[master_ns].ipv4 | default('') == ansible_host or nameservers[master_ns].ipv6 | default('') == ipv6_address %}
    type master;
    allow-transfer {{ '{' }} {{  '; '.join(ns_ipv4) }};{% if ipv6_address | default(false) and ns_ipv6 | length > 0 %} {{ '; '.join(ns_ipv6) }};{% endif %} {{ '}' }};
    update-policy {
        grant certbot. name _acme-challenge.{{ domain }}. txt;
        {% for acme in dns_zones[domain]['acme_challenge'] | default ([]) %}
        grant certbot. name _acme-challenge.{{ acme }}.{{ domain }}. txt;
        {% endfor %}
  };
{% else %}
    type slave;
    masters {{ '{' }} {{ nameservers[master_ns].ipv4 }};{% if ipv6_address | default(false) and ns_ipv6 | length > 0 %} {{ nameservers[master_ns].ipv6 }}; {% endif %} {{ '}' }};
    allow-notify {{ '{' }} {{  '; '.join(ns_ipv4) }};{% if ipv6_address | default(false) and ns_ipv6 | length > 0 %} {{ '; '.join(ns_ipv6) }};{% endif %} {{ '}' }};
    allow-transfer {{ '{' }} {{  '; '.join(ns_ipv4) }};{% if ipv6_address | default(false) and ns_ipv6 | length > 0 %} {{ '; '.join(ns_ipv6) }};{% endif %} {{ '}' }};
{% endif %}

{% if dns_zones[domain].dnssec | default(false) %}
    file "/var/lib/bind/{{ domain }}.db.signed"; # zone file path
{% else %}
    file "/var/lib/bind/{{ domain }}.db"; # zone file path
{% endif %}
{{ '}' }};
{% endfor %}

