- name: Ensure openDKIM is installed
  apt:
    name: [opendkim, opendkim-tools]
    state: present

  # Postfix needs access to the DKIM files. Permissions are annoying outside of this folder.
- name: Ensure we have a socket directory under postfix
  file:
    state: directory
    path: /var/spool/postfix/opendkim
    owner: opendkim
    group: postfix

- name: Update OpenDKIM config
  template:
    src: dkim/opendkim.conf.j2
    dest: /etc/opendkim.conf
  notify:
    - restart opendkim

- name: Update opendkim default file
  template:
    src: dkim/opendkim.j2
    dest: /etc/default/opendkim
  notify:
    - restart opendkim

- name: Ensure we have a opendkim directory
  file:
    state: directory
    path: "{{ item.p }}"
    owner: opendkim
    group: '{{ item.g }}'
    mode: "{{ item.m }}"
  with_items:
    - {p: /etc/opendkim, m: "0755", g: opendkim}
    - {p: /etc/opendkim/keys, m: "0550", g: opendkim}
    - {p: /etc/opendkim/txt, m: "0655", g: bind}

- name: Update dkim tables
  template:
    src: "dkim/{{ item }}.j2"
    dest: "/etc/opendkim/{{ item }}"
    owner: opendkim
    group: opendkim
    mode: 0644
  with_items:
    - SigningTable
    - KeyTable
    - TrustedHosts

- name: Output current DKIMs
  debug:
    var: dkim_keys

- block: 
  - name: Check for hostkey
    command: "/usr/bin/test -f /etc/opendkim/keys/{{ ansible_hostname[:2] }}{{ dkim_key }}.private"
    register: dkim_exists
    changed_when: dkim_exists.rc == 1
    failed_when: false
  - name: Restore DKIM key files to host
    copy:
      dest: "/etc/opendkim/keys/{{ inventory_hostname[:2] }}{{ item }}.private"
      src: "{{ backup_dir }}/mail/DKIM/{{ inventory_hostname[:2] }}{{ item }}.private"
      owner: opendkim
      group: opendkim
      mode: 0640
    with_items:
      - '{{ dkim_keyS }}'
    when: dkim_exists.changed
  - name: Restore DKIM txt files to host
    copy:
      dest: "/etc/opendkim/txt/{{ inventory_hostname[:2] }}{{ item }}.txt"
      src: "{{ backup_dir }}/mail/DKIM/{{ inventory_hostname[:2] }}{{ item }}.txt"
      owner: opendkim
      group: opendkim
    with_items:
      - '{{ dkim_keyS }}'
    when: dkim_exists.changed
  rescue:
    - name: Create the hostkey if it does not already exist
      command: "opendkim-genkey --restrict --bits=2048 --hash-algorithms=sha256 --selector={{ ansible_hostname[:2] }}{{ item }} --directory=/etc/opendkim/keys --domain={{ ansible_fqdn }} --append-domain creates=/etc/opendkim/keys/{{ ansible_hostname[:2] }}{{ item }}.private"
      with_items: "{{ dkim_keyS }}"
      notify:
        - restart opendkim
      register: new_dkim

- name: Ensure new txt files are in the correct folder.
  shell: "mv /etc/opendkim/keys/*.txt /etc/opendkim/txt/."
  when: new_dkim | default(false)

-  name: Clean up hostkey text file
   replace:
     path: /etc/opendkim/txt/{{ ansible_hostname[:2] }}{{ item }}.txt
     replace: ''
     regexp: "(\\.{{ inventory_hostname }}\\.)"
   with_items: "{{ dkim_keyS }}"

- name: Ensure we have a local copy of the private DKIM files
  fetch:
    src: '/etc/opendkim/keys/{{ ansible_hostname[:2] }}{{ item }}.private'
    dest: '{{ backup_dir }}/mail/DKIM/{{ ansible_hostname[:2] }}{{ item }}.private'
    flat: yes
  with_items: 
    - "{{ dkim_keyS }}"

- name: Ensure we have a local copy of the DKIM txt files
  fetch:
    src: '/etc/opendkim/txt/{{ ansible_hostname[:2] }}{{ item }}.txt'
    dest: '{{ backup_dir }}/mail/DKIM/{{ ansible_hostname[:2] }}{{ item }}.txt'
    flat: yes
  with_items: 
    - "{{ dkim_keyS }}"

- name: Ensure master nameserver has all DKIM keys
  copy: 
    src: '{{ backup_dir }}/mail/DKIM/{{ item[0][:2] }}{{ item[1] }}.txt'
    dest: '/etc/opendkim/txt/{{ item[0][:2] }}{{ item[1] }}.txt'
    mode: 0755
    owner: bind
    group: bind
  with_nested:
    - "{{ groups['mail'] }}"
    - "{{ dkim_keyS  }}"
  when: "'master_dns' in group_names"

- name: Ensure we have proper permissions on the DKIM keys
  file:
    state: directory
    path: /etc/opendkim/keys
    owner: opendkim
    group: opendkim
    recurse: yes
  register: dkim_perms
  changed_when: dkim_perms.diff.after|length > 1

