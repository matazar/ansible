# Create empty var to hold all our domains.
- set_fact: 
    emby_domains: []

# Create a list of domains that need to be included in our wildcard cert
- set_fact:
    emby_domains: '{{ emby_domains + ["*."+item.split(".")[-2:] | join(".")] }}'
  with_items: '{{ emby_server_hostnames }}'

# Output the domains
- name: Output domains we need included in the wildcard cert.
  debug:
    var: emby_domains | unique

# Actually run certbot
- include_role:
    name: certbot_dns
  vars:
    cert_name: "{{ emby_server_cert_name }}"
    cert_domains: '{{ emby_domains | unique }}'
  tags:
    - certbot

- name: Ensure emby user is in ssl-certs groups
  user:
    append: yes
    create_home: no
    groups: 
      - ssl-certs
    name: emby

- name: Check if p12 certificate file exists.
  command: '/usr/bin/test -f /etc/letsencrypt/live/{{ emby_server_cert_name }}/fullchain.p12'
  register: emby_p12
  failed_when: false
  changed_when: emby_p12.rc == 1

- name: Convert certificate for use with Emby
  command: "openssl pkcs12 -export -inkey /etc/letsencrypt/live/{{ emby_server_cert_name }}/privkey.pem -in /etc/letsencrypt/live/{{ emby_server_cert_name }}/fullchain.pem -out /etc/letsencrypt/live/{{ emby_server_cert_name }}/fullchain.p12 -password pass:"
  when: new_cert.changed | default(false) or emby_p12.changed
  notify: restart emby

- name: Ensure script for installing emby certs is updated.
  copy:
    src: emby_cert.py
    dest: /root/emby_cert.py
