- include: certs.yml

- name: Install prereqs
  apt:
    name: ['dbconfig-common', 'dictionaries-common', 'libmcrypt4', '{{ php_fpm }}', 'php-auth-sasl', 'php-pear',
           'php-pgsql', 'php-pspell', '{{ php_version }}-cli', '{{ php_version }}-cgi', '{{ php_version }}-common', '{{ php_version }}-json', '{{ php_version }}-ldap',
           '{{ php_version }}-mbstring', '{{ php_version }}-pgsql', 'postgresql', '{{ php_version }}-xml', '{{ php_version }}-zip', 'libgd-tools',
           php-gd, php-intl]
    state: present

- set_fact: 
    roundcube_des_key: "{{ lookup('password', '/dev/null length=24') }}"
  when: roundcube_des_key | default('') == ''

- name: Add roundcube des key to host var
  local_action:
    module:  blockinfile
    marker_begin: roundcube des key start
    marker_end: roundcube des key end
    path: "{{ playbook_dir }}/env/{{ env }}/host_vars/{{ inventory_hostname }}.yml"
    block: "roundcube_des_key: {{ roundcube_des_key }}"
    state: present
  become: false

# Install/upgrade
- block:
  - name: Check for roundcube folder
    command: "/usr/bin/test -d /var/www/roundcube"
    register: roundcube_folder
    changed_when: false
  - name: Check roundcube version
    shell: grep '## Release' /var/www/roundcube/CHANGELOG.md | head -1
    register: current_version
    failed_when: not current_version.stdout | regex_search(roundcube_version)
    changed_when: false
  rescue:
  - name: Delete existing folder
    file: 
      state: absent
      path: /var/www/roundcube
    when: not roundcube_folder.failed
  - name: 'Download roundcube {{ roundcube_version }} tarball'
    get_url:
      url: '{{ roundcube_download_url }}'
      dest: /tmp/
      mode: 0700
  - name: Extract roundcube tarball
    unarchive: 
      remote_src: yes
      src: "/tmp/roundcubemail-{{ roundcube_version }}-complete.tar.gz"
      dest: /var/www/
  - name: Rename the extracted folder
    command: "/bin/mv /var/www/roundcubemail-{{ roundcube_version }} /var/www/roundcube"
  - name: Set permissions
    file:
      path: /var/www/roundcube
      recurse: yes
      owner: www-data
      group: www-data

- name: Configure roundcube
  template:
    src: config.inc.php.j2
    dest: /var/www/roundcube/config/config.inc.php

- name: Configure roundcube plugins
  template:
    src: "{{ item }}/config.inc.php.j2"
    dest: "/var/www/roundcube/plugins/{{ item }}/config.inc.php"
  with_items:
    - password
    - managesieve

- name: Update ldap.conf file
  template:
    src: ldap.conf.j2
    dest: /etc/ldap/ldap.conf

- name: Copy over nginx file
  template:
    src: nginx.conf.j2
    dest: "/etc/nginx/sites-available/{{ roundcube_hostname }}"
  notify: restart nginx
  
- name: Ensure the site is enabled
  file: 
    src: "/etc/nginx/sites-available/{{ roundcube_hostname }}"
    dest: "/etc/nginx/sites-enabled/{{ roundcube_hostname }}"
    state: link
  notify: restart nginx

- name: Check fastcgi params
  template:
    src: fastcgi_params.j2
    dest: /etc/nginx/fastcgi_params
  notify: 'restart {{ php_fpm }}'

- include: composer.yml

- name: Ensure the service is enabled
  service:
    name: '{{ php_fpm }}'
    enabled: yes

- name: Ensure www-data user can access certs
  user:
    append: yes
    create_home: no
    groups: ssl-certs
    name: www-data
  notify: restart nginx

- include: database.yml

- name: Make sure the errors.log file exists
  file:
      owner: www-data
      group: www-data
      path: /var/www/roundcube/logs/errors.log
      state: touch
  register: touch_feedback
  changed_when: touch_feedback.diff.before.state | default('') == 'absent'

- name: Add roundcube auth to fail2ban
  template:
    src: fail2ban.jail.j2
    dest: /etc/fail2ban/jail.d/roundcube.conf
  notify: restart fail2ban

- name: Ensure setup files are no longer present
  file:
    path: "/var/www/roundcube/{{ item }}"
    state: absent
  with_items:
    - CHANGELOG
    - INSTALL
    - installer
    - README.md
    - UPGRADING