$HTTP["host"] == "{{ pihole_hostname }}" {
  # Ensure the Pi-hole Block Page knows that this is not a blocked domain
  setenv.add-environment = ("fqdn" => "true")

{% if pihole_https_enable %}
server.modules += ("mod_openssl")

$SERVER["socket"] ==    "[::]:443" { 
  ssl.engine = "enable"
  ssl.privkey = "/etc/letsencrypt/live/{{ pihole_cert_name }}/privkey.pem"
  ssl.pemfile =  "/etc/letsencrypt/live/{{ pihole_cert_name }}/fullchain.pem"
  ssl.honor-cipher-order = "enable"
  ssl.cipher-list = "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH"
  ssl.use-sslv2 = "disable"
  ssl.use-sslv3 = "disable" 
 }
  $SERVER["socket"] == ":443" {
    ssl.engine = "enable"
    ssl.privkey = "/etc/letsencrypt/live/{{ pihole_cert_name }}/privkey.pem"
    ssl.pemfile =  "/etc/letsencrypt/live/{{ pihole_cert_name }}/fullchain.pem"
    ssl.honor-cipher-order = "enable"
    ssl.cipher-list = "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH"
    ssl.use-sslv2 = "disable"
    ssl.use-sslv3 = "disable"       
  }

  # Redirect HTTP to HTTPS
  $HTTP["scheme"] == "http" {
    $HTTP["host"] =~ ".*" {
      url.redirect = (".*" => "https://%0$0")
    }
  }
}
{% endif %}